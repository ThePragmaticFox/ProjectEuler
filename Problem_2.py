# Even Fibonacci numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Complexity:
# Time O(n)
# Space O(1) 

class Solution:
    def get(self, n: int) -> int:
        if n < 2:
            return 0
        fib1 = 1
        fib2 = 2
        res = 0
        while fib2 <= n:
            tmp = fib1
            fib1 = fib2
            fib2 = tmp + fib2
            if fib1 % 2 == 0:
                res += fib1
        return res

solution = Solution()
print(solution.get(4000000))